<script type="text/javascript" src="/js/plugins/math/MathJax.js?config=TeX-AMS_CHTML""></script>
<link href="/css/test.css" rel="stylesheet" type="text/css">

<link rel="stylesheet" type="text/css" href="/js/plugins/slick/slick.css"/>
<link rel="stylesheet" type="text/css" href="/js/plugins/slick/slick-theme.css"/>
<script type="text/javascript" src="/js/plugins/slick/slick.min.js"></script>

<div class="exam-header">
	<div class="container">
		<button data-action="finish" class="btn btn-success btn-flat">Nộp bài</button>
		<div class="exam-question-count"> 1/<%= questions.length %></div>
		<div class="exam-time pull-right" id="clockdiv">
			<span class="hours"></span>
			<span class="minutes"></span>
			<span class="seconds"></span>
		</div>
	</div>
</div>

<div class="exam-content container">
	<div class="panel-body">
		<p class="text-bold"><%= exam.info %></p>
		<div id="test">
		<% for(var i = 0; i < questions.length; i++) { %>
			<div data-slidr="<%= i %>" class="exam-question" data-question="<%= questions[i]['_id'] %>">
				<% if(questions[i]['info'] != '') { %>
					<h5><%= questions[i]['info'] %></h5>
				<% } %>
				<p><%= (i+1)+'.  '+questions[i]['question'] %></p>
				<% if(questions[i]['answers'] != undefined) { %>
					<% for(var j = 0; j < questions[i]['answers'].length; j++) { %>
						<label class="<%= questions[i]['type']+questions[i]['style'] %> <%= questions[i]['type']+'-primary' %>">
							<input type="<%= questions[i]['type'] %>" name="answer<%= questions[i]['_id'] %>" value="<%= questions[i]['answers'][j] %>" class="styled"> <span class="lbl"><%= questions[i]['answers'][j] %></span>
						</label>
					<% } %>
				<% }%>
			</div>
		<% } %>
		</div>
	</div>
</div>

<script>

	$(document).ready(function() {

		function responsiveFn() {
	    var width = $( window ).width();
	    var height = $( window ).height();
	 
	    if(width <= 768) {
	    	$('#test').slick({
					dots: true,
		  		infinite: false,
		  		arrows: false,
		  		adaptiveHeight: true
				}).on('afterChange', function(event, slick, currentSlide){
				  $('.exam-question-count').text((currentSlide + 1) +'/'+(slick.slideCount));
				});
	   	}
	 	}

		$(window).on('resize', responsiveFn);

		var time_start = Date.now();
		var time_limit = <%= exam.time %>;
		var questions_number = <%= questions.length %>;
		var timeinterval;

		$('.styled').uniform({ radioClass: 'choice', selectAutoWidth: false });
		$('h5').each(function() {
			var that = $(this);
			var v = that.text();
			var test = v.match(/<\/*[b|u].*>/gi);
			if (test != null && test != []) {
				var input = v.replace(/&(lt|gt);/g, function (str, p1){
					return (p1 == "lt")? "<" : ">";
				});
				var text = input.replace(/<\/?(?!b|u)[^(?!b|u)>]+(>|$)/gi, "");
				that.html(text)
			}
		})
		function getTimeRemaining(endtime){
			var t = endtime - Date.parse(new Date());
			var seconds = Math.floor( (t/1000) % 60 );
			var minutes = Math.floor( (t/1000/60) % 60 );
			var hours = Math.floor( (t/(1000*60*60)) % 24 );
			var days = Math.floor( t/(1000*60*60*24) );
			return {
				'total': t,
				'days': days,
				'hours': hours,
				'minutes': minutes,
				'seconds': seconds
			};
		}
		
		function initializeClock(id, endtime) {
			var clock = document.getElementById(id);
			var hoursSpan = clock.querySelector('.hours');
			var minutesSpan = clock.querySelector('.minutes');
			var secondsSpan = clock.querySelector('.seconds');

			function updateClock() {
				var t = getTimeRemaining(endtime);
				if (t.total <= 0) {
					$('[data-action="finish"]').remove();
					swal({
				  	title: "Hết giờ!",
				  	text: "bấm nút OK để xem điểm.",
				  	type: "warning",
				  	showCancelButton: false,
				  	showLoaderOnConfirm: true,
					},
					function(isConfirm){
				  	if (isConfirm) finish_test();
					})
					
					clearInterval(timeinterval);
				} else {
					hoursSpan.innerHTML = ('0' + t.hours).slice(-2)+' :';
					minutesSpan.innerHTML = ('0' + t.minutes).slice(-2)+' :';
					secondsSpan.innerHTML = ('0' + t.seconds).slice(-2);
				}
			}

			updateClock();
			timeinterval = setInterval(updateClock, 1000);
		}

		initializeClock('clockdiv', Date.now() +  time_limit * 1000);
		$('[data-action="finish"]').click(function() {
			swal({
		  	title: "Nộp bài?",
		  	text: "Bạn chắc chắn nộp bài chứ !",
		  	type: "warning",
		  	showCancelButton: true,
		  	confirmButtonColor: "#DD6B55",
		  	confirmButtonText: "Nộp bài",
		  	cancelButtonText: "Không, chưa làm xong",
		  	closeOnConfirm: false,
		  	showLoaderOnConfirm: true,
		  	closeOnCancel: true
			},
			function(isConfirm){
		  	if (isConfirm) {
		  		clearInterval(timeinterval);
		  		finish_test();
		  	}
			})
		})

		var result_text = function(score, pass, total) {
			var time = msToTime(Date.now() - time_start);
			return '<div class="score-board"><div><p>Điểm</p><p>Số câu đúng</p><p>Thời gian</p></div><div><p>'+score+'</p><p><span>'+pass+'</span>/'+total+'</p><p>'+time+'</p></div></div>'
		};

		var finish_test = function() {
			var user_result = [];
  		$('.exam-question').each(function() {
  			var that = $(this);
  			var input = that.find('input');
  			var checker = false;
  			input.each(function() {
	  			if($(this).is(':checked')) {
	  				checker = true;
	  				user_result.push(input.index($(this)));
	  			}
	  		})
	  		if (!checker) user_result.push('no_answer');
  		})
  		$.post('/get-score',{id: '<%= id %>', answers: user_result}, function(res) {
  			if(res.ok) {
  				<% if(exam.score && exam.hint && exam.repeat) { %>

  					do_again_and_show_result(res)

					<% } else if(exam.score && exam.hint) { %>

						show_result(res)

					<% } else if(exam.score && exam.repeat) { %>

						do_again(res)

					<% } else if(exam.score) { %>

						swal({
						  title: 'Kết quả!',
						  text: result_text(res.score, res.pass, questions_number),
						  html: true
						})

					<% } else { %>
						swal('Đã nộp!', 'Bài của bạn đã được nộp', 'success')
					<% } %>
  			}
  		})
		}

		var do_again_and_show_result = function(res) {
			swal({
		  	title: 'Kết quả!',
			  text: result_text(res.score, res.pass, questions_number),
			  html: true,
			  timer: 30000,
		  	showCancelButton: true,
		  	confirmButtonColor: "#DD6B55",
		  	confirmButtonText: "Làm lại",
		  	cancelButtonText: "Xem đáp án",
		  	closeOnConfirm: true,
		  	closeOnCancel: true
			},function(isConfirm) {
				if (isConfirm) location.reload()
				else result_display(res.cheatsheet);
			})
		};

		var do_again = function(res) {
			swal({
		  	title: 'Kết quả!',
			  text: result_text(res.score, res.pass, questions_number),
			  html: true,
		  	confirmButtonColor: "#DD6B55",
		  	confirmButtonText: "Làm lại",
		  	closeOnConfirm: true,
			},function(isConfirm) {
				if (isConfirm) location.reload();
			})
		};

		function flatten_array(a) {
			return [].concat.apply([], a)
		};

		function result_display(sheet) {
			var q = $('.exam-question');
			var obj;
			for (var i = 0; i < q.length; i++) {
				q.find('input').prop('disabled', true);
				obj = $(q[i]);
				if(Array.isArray(sheet[i])) {
					for (var j = 0; j < sheet[i].length; j++) highlight_result(obj, sheet[i][j]);
				} else highlight_result(obj, sheet[i]);
			}
			$('button[data-action="finish"]').text('Làm lại').data('action','').on('click', function(e) {
				e.preventDefault();
				location.reload();
			})
		}

		function highlight_result(question, index) {
			var obj = question.find('label:eq('+index+')');
			var tmp = obj.attr('class').replace('primary','success');
			obj.attr('class', tmp);
			obj.find('span:eq(0)').addClass('checked');
			obj.find('span:eq(1)').addClass('text-success');
		}

		var show_result = function(res) {
			swal({
		  	title: 'Kết quả!',
			  text: result_text(res.score, res.pass, questions_number),
			  html: true,
		  	confirmButtonColor: "#DD6B55",
		  	confirmButtonText: "Xem đáp án",
		  	closeOnConfirm: true,
			},function(isConfirm) {
				if (isConfirm) result_display(res.cheatsheet);
			})
		};
	})
</script>